# -*- coding: utf-8 -*-
"""DAY_12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t57l3ST7S0GeU7wwpbUE6K13Z2cnV64h
"""

# SCOPE

enemies = 1

def increase_enemies():
  enemies = 2
  print(f"enemies inside function: {enemies}")  # local scope variable enemies

increase_enemies()
print(f"enemies outside function: {enemies}")  # global scope variable enemies

# Local Scope - inside the function

def drink_potion():
  potion = 2
  print(potion)

drink_potion()
print(potion)  # giving error because potion variable is defined locally and is not accessible outside of the function.

# Global Scope - accessible throughout the code because they are defined at a higher level

player_health = 10

def drink_potion():
  potion = 2
  print(player_health)  # gets printed because player_health is defined globally

drink_potion()

# NAMESPACE - anything you give a name to - has a namespace

def game():
  def drink_potion():  # nested function
    potion = 2
    print(player_health)

# Does Python have Block Scope?

# No, python don't have any block scope -- indent doesn't put a fence --
# But, functions do have block scope -- for, if etc don't

game_level = 3
enemies = ["Skeleton", "Zombie", "Alien"]

if game_level < 5:
  new_enemy = enemies[0]  # defined inside if block

print(new_enemy)  # executes perfectly -- means no block scope exists in python

game_level = 2

def create_enemy():  # function has local scope
  enemies = ["Skeleton", "Zombie", "Alien"]
  if game_level < 5:
    new_enemy = enemies[0]  # defined inside if block

print(new_enemy)  # shows an error -- means block scope exists in python functions

# MODIFYING GLOBAL SCOPE - use different variables for local and global scope

enemies = 1

def increase_enemies():
  global enemies  # resolves the error
  enemies += 1  # gives error
  print(f"enemies inside function: {enemies}")  # local scope variable enemies

increase_enemies()
print(f"enemies outside function: {enemies}")  # global scope variable enemies

# Avoid modifying global scope - don't try to modify a global scope variable inside a function

# PYTHON CONSTANS AND GLOBAL SCOPE

# Global constants  - you're not gonna modify them quite often

PI = 3.14  # use uppercase to present constants to differentiate them from variables

# NUMBER GUESSING GAME

# This is the final project of today - DAY _ 12
# Head over to this link to get the complete code

https://replit.com/@AqsaAshfaq07/Number-Guessing-Game?v=1