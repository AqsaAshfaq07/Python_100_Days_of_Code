# -*- coding: utf-8 -*-
"""DAY_10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tsUl4SkRFA-Cch7Y_zKLCFcEvEVIFhq2
"""

# FUNCTIONS WITH OUTPUTS

def my_func(a, b):
  result = a * b
  return result     # output of the function

# Function with Output

f_name = input("Enter your first name:  \n")
l_name = input("Enter your last name:  \n")

def format_name(first_name, last_name):
  full_name = first_name.title() + " " + last_name.capitalize()   # title() and capitalize() work same here
  return f"Your formatted name is {full_name}"    # end of function and now exit

# calling the function to get its output
format_name(f_name, l_name)

# Using Multiple Return Statements

f_name = input("Enter your first name:  \n")
l_name = input("Enter your last name:  \n")

def format_name(first_name, last_name):
  if first_name == " " or last_name == " ":
    return "Your entered name can not be empty"
  return first_name + last_name

# calling the function to get its output
format_name(f_name, l_name)

# Days in Month

# Copying leap year function we've created earlier

year_ = int(input("Enter a year: \n"))

def leap_year(year):
  if year %4 == 0:
      if (year %100 != 0):
          if year %400 == 0:
              return True
          else:
              return False
      else:
          return True
  else:
      return False

# leap_year(year_)


month_ = input("Enter a month: \n")
def days_in_month(year, month):
  """ Enter the month name whose number of days you wanna check!.
  Also add year to update number of days incase it's a leap year """

  match month:
    case "January":
      print("No of days are 31")
    case "February":
      if leap_year(year) == True:
        print("No of days are 29")
      else:
        print("No of days are 28")
    case "March":
      print("No of days are 31")
    case "April":
      print("No of days are 30")
    case "May":
      print("No of days are 31")
    case "June":
      print("No of days are 30")
    case "July":
      print("No of days are 31")
    case "August":
      print("No of days are 31")
    case "September":
      print("No of days are 30")
    case "October":
      print("No of days are 31")
    case "November":
      print("No of days are 30")
    case "December":
      print("No of days are 31")
    case _:
      print("Please enter a valid month!")

days_in_month(year_, month_)

# DocStrings - little documentation along with using functions in the code

f_name = input("Enter your first name:  \n")
l_name = input("Enter your last name:  \n")

def format_name(first_name, last_name):
  # Creating a docstring
  """ Take first and last name and return the formatted name !"""

  if first_name == " " or last_name == " ":
    return "Your entered name can not be empty"
  return first_name.title() + " " + last_name.title()

# calling the function to get its output
format_name(f_name, l_name)

"""
can also be used for multiple lines comments
"""

# CALCULATOR



#  print VS return

# print
# can be used anywhere in a program of every kind
# just prints the stuff to screen and the program execution moves to the next line


# return
# can be used just in functions
# prints the mentioned stuff to console and aborts the execution